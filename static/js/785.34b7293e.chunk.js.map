{"version":3,"file":"static/js/785.34b7293e.chunk.js","mappings":"yNAyCA,UAnCgB,WACd,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAERE,QAAQC,IAAI,kBAAmBJ,IAE/BK,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEuBC,EAAAA,EAAAA,gBAA0BL,GAFjD,OAEUM,EAFV,OAGIP,EAAWO,GAHf,gDAKIJ,QAAQC,IAAI,aAAZ,MALJ,0DADc,uBAAC,WAAD,wBASdI,EACD,GAAE,CAACP,IAEJ,IAAIQ,EAAe,GAUnB,OATuB,IAAnBV,EAAQW,SACVD,EAAeV,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACzB,2BACE,wBAAKF,KACL,uBAAIC,MAFGC,EADgB,MAS3B,wBACCL,GAGJ,C,qDCvCKM,EAAU,mCAEVT,EAAY,CACVU,kBADU,WACW,OAAD,gHAClBC,EADkB,kEAC+CF,GAD/C,SAEDG,MAAMD,GAFL,cAElBE,EAFkB,gBAGLA,EAASC,OAHJ,cAGlBb,EAHkB,yBAIjBA,EAAKc,SAJY,4CAKzB,EACKC,aAPU,SAOGC,GAAQ,OAAD,gHAClBN,EADkB,0DACuCM,EADvC,oBACwDR,GADxD,SAEDG,MAAMD,GAFL,cAElBE,EAFkB,gBAGLA,EAASC,OAHJ,cAGlBb,EAHkB,yBAIjBA,EAAKc,SAJY,4CAKzB,EACKG,gBAbU,SAaMvB,GAAU,OAAD,gHACvBgB,EADuB,6CACqBhB,EADrB,oBACwCc,GADxC,SAENG,MAAMD,GAFA,cAEvBE,EAFuB,gBAGVA,EAASC,OAHC,cAGvBb,EAHuB,yBAItBA,GAJsB,4CAK9B,EACKkB,gBAnBU,SAmBMxB,GAAU,OAAD,gHACvBgB,EADuB,6CACqBhB,EADrB,4BACgDc,GADhD,SAENG,MAAMD,GAFA,cAEvBE,EAFuB,gBAGVA,EAASC,OAHC,cAGvBb,EAHuB,yBAItBA,EAAKmB,MAJiB,4CAK9B,EACKC,gBAzBU,SAyBM1B,GAAU,OAAD,gHACvBgB,EADuB,6CACqBhB,EADrB,4BACgDc,GADhD,SAENG,MAAMD,GAFA,cAEvBE,EAFuB,gBAGVA,EAASC,OAHC,cAGvBb,EAHuB,OAI7BJ,QAAQC,IAAI,oBAAqBG,EAAKc,SAJT,kBAKtBd,EAAKc,SALiB,4CAM9B,GAGH,K,sBCpCA,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews/Reviews.js","services/apiClient.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport apiClient from '../../services/apiClient';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  console.log('setReviews :>> ', setReviews);\n\n  useEffect(() => {\n    async function fetchReviews() {\n      try {\n        const data = await apiClient.getMovieReviews(movieId)\n        setReviews(data);\n      } catch (error) {\n        console.log('error :>> ', error);\n      }\n    }\n    fetchReviews();\n  }, [movieId]);\n\n  let reviewMarkup = [];\n  if (reviews.length !== 0) {\n    reviewMarkup = reviews.map(({ author, content, id }) => (\n      <li key={id}>\n        <h4>{author}</h4>\n        <p>{content}</p>\n      </li>\n    ));\n  }\n\n  return (\n    <ul>\n    {reviewMarkup}\n    </ul>\n  );\n};\n\nexport default Reviews;","const API_KEY = '6a9219fefaee6bb385bea99babc897a6';\n\nconst apiClient = {\n  async getTrendingMovies() {\n    const url = `https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  },\n  async searchMovies(query) {\n    const url = `https://api.themoviedb.org/3/search/movie?query=${query}&api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.results;\n  },\n  async getMovieDetails(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data;\n  },\n  async getMovieCredits(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    return data.cast;\n  },\n  async getMovieReviews(movieId) {\n    const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API_KEY}`;\n    const response = await fetch(url);\n    const data = await response.json();\n    console.log('data.results :>> ', data.results);\n    return data.results;\n  },\n};\n\nexport default apiClient;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["useState","reviews","setReviews","movieId","useParams","console","log","useEffect","apiClient","data","fetchReviews","reviewMarkup","length","map","author","content","id","API_KEY","getTrendingMovies","url","fetch","response","json","results","searchMovies","query","getMovieDetails","getMovieCredits","cast","getMovieReviews","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}